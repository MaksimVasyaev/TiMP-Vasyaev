Модуль, отвечающий за реализацию сдвигового шифра:

Заголовочный модуль:
#pragma once
#include <string> 
using namespace std;
class Cesar
{
private:
	string m, M, res, output;
	int key;
	const int alph = 26;
	string Preparation_For_Encript(string m);
	string Before_Decription(string m);
public:

	string Shift_For_Encript(string M);
	string Shift_For_Decript(string M);
//	void Choose(int ans);
	Cesar(const unsigned int _key); 
	
};


Главный модуль:
#include "header.h"
#include <iostream> 
#include <string> 
#include <cctype> 
#include <cppunit/TestCaller.h>
#include <cppunit/ui/text/TextTestRunner.h>
using namespace std;
int main()
{
	int _key, ans;
	string m, output, M, res;
	try {	
		cout << "Enter the key: ";
		cin >> _key;
		cout << "Enter tne message: ";
		cin.ignore();
		getline(cin, m);
		cout << "If you want to encrypt, enter 1" << endl;
		cout << "If you want to decrypt, enter 2" << endl;
		cin >> ans;
		Cesar x(_key);
		//-----------------
		if (ans == 1)
		{
			
			output = x.Shift_For_Encript(M);
		}

		else if (ans == 2)
		{
			output = x.Shift_For_Decript(M);
		}
		else
			{
				cout<<"Wrong ans!" << endl;
			}
		
		cout << output << endl;
		//-----------------------
		
	}
	catch (int err)
	{
		if (err == 1)
		{
			cerr << "Weaked Key!" << endl;
			return 1;
		}
		else
			if (err == 2)
			{
				cerr << "Incorrect symbol" << endl;
				return 2;
			}
				else
					if (err == 3)
					{
						cerr << "Fake data" << endl;
						return 3;
					}
	}
	/*class Test:public CppUnit::TestCase
	{
	private:
	 
	}
	return 0;*/
}